<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.green.usedmarket.dao.MemberDao">
<!-- 아이디와 일치하는 회원정보를 가져오는 쿼리문 -->
	<select id="getMember" resultType="kr.green.usedmarket.vo.MemberVo">
		select * from member where mb_id = #{id} and mb_isWithdrawal = 'N'
	</select>
<!-- 회원을 등록하는 쿼리문 -->	
	<insert id="insertMember">
		insert into 
			member(mb_id, mb_pw, mb_name, mb_gender, mb_postcode, mb_roadAddress, mb_jibunAddress, mb_detailAddress, mb_phone, mb_email, mb_division)
			values(#{member.mb_id}, #{member.mb_pw}, #{member.mb_name}, #{member.mb_gender}, #{member.mb_postcode}, 
					#{member.mb_roadAddress}, #{member.mb_jibunAddress}, #{member.mb_detailAddress}, #{member.mb_phone}, #{member.mb_email}, #{member.mb_division})
	</insert>
<!-- 회원가입시 기본 가판대를 생성하는 쿼리문 -->
	<insert id="insertStand">
		insert into
			stand(st_name, st_mb_id, st_img)
			values(#{stand.st_name}, #{stand.st_mb_id}, #{stand.st_img})
	</insert>
<!-- 회원정보를 수정하는 쿼리문 -->
	<update id="updateInfoIncludePw" parameterType="kr.green.usedmarket.vo.MemberVo">
		update member 
			set mb_pw = #{oriMember.mb_pw}, mb_postcode = #{oriMember.mb_postcode}, mb_roadAddress = #{oriMember.mb_roadAddress}, mb_jibunAddress = #{oriMember.mb_jibunAddress},
				mb_detailAddress = #{oriMember.mb_detailAddress}, mb_phone = #{oriMember.mb_phone}, mb_email = #{oriMember.mb_email}
			where mb_id = #{oriMember.mb_id}
	</update>
<!-- 회원탈퇴하는(탈퇴여부 = 'Y', 탈퇴시간 = now()) 쿼리문 -->
	<update id="updateWithdrawal">
		update member set mb_isWithdrawal = 'Y', mb_withdrawalDate = now() where mb_id = #{mb_id}
	</update>
<!-- 등록된 상품 삭제여부 'Y'로 변경하는 쿼리문 -->
	<update id="updateProductisDel">
		update product set pd_isDel = 'Y' where pd_mb_id = #{mb_id}
	</update>
<!-- 등록된 게시글 삭제여부 'Y'로 변경하는 쿼리문 -->
	<update id="updateBoradDel">
		update board set bo_isDel = 'Y' where bo_mb_id = #{mb_id}
	</update>
<!-- 등록된 댓글 삭제여부 'Y'로 변경하는 쿼리문 -->	
	<update id="updateCommentDel">
		update comment set cmt_isDel = 'Y' where cmt_mb_id = #{mb_id}
	</update>
<!-- 가판대를 삭제하는 쿼리문 -->	
	<delete id="deleteStand">
		delete from stand where st_mb_id = #{mb_id}
	</delete>
<!-- 관심상품을 삭제하는 쿼리문 -->
	<delete id="deleteInterestPd">
		delete from interest_product where itpd_mb_id = #{mb_id}
	</delete>	
<!-- 채팅방을 삭제하는 쿼리문 -->
	<delete id="deleteChatRomm">
		delete from chat_room where chro_buyer_mb_id = #{mb_id} or chro_seller_mb_id2 = #{mb_id}
	</delete>
<!-- 채팅메시지를 삭제하는 쿼리문 -->
	<delete id="deleteChatMessage">
		delete from chat_message where chmg_mb_id = #{mb_id}
	</delete>
<!-- 이름과 이메일이 일치하는 회원정보를 조회하는 쿼리문 -->	
	<select id="selectIdFind" resultType="kr.green.usedmarket.vo.MemberVo">
		select * from member where mb_name = #{mb_name} and mb_email = #{mb_email}
	</select>
<!-- 아이디, 이름, 이메일이 일치하는 회원정보를 조회하는 쿼리문 -->
	<select id="selectPwFind" resultType="kr.green.usedmarket.vo.MemberVo">
		select * from member where mb_id = #{mb_id} and mb_name = #{mb_name} and mb_email = #{mb_email}
	</select>
<!-- 이름과 이메일주소, 가입구분이 일치하는 회원정보를 조회하는 쿼리문 -->
	<select id="selectKakaoCheck" resultType="kr.green.usedmarket.vo.MemberVo">
		select * from member where mb_name = #{nickname} and mb_email = #{email} and mb_division = #{division}
	</select>
<!-- 카카오로 로그인한 회원정보 등록하는 쿼리문 -->
	<insert id="insertKakaoMember">
		insert into
			member(mb_name, mb_email, mb_gender, mb_division, mb_id, mb_pw)
			values(#{kakaoMember.mb_name}, #{kakaoMember.mb_email}, #{kakaoMember.mb_gender}, #{kakaoMember.mb_division}, #{kakaoMember.mb_id}, #{kakaoMember.mb_pw})
	</insert>
<!-- 이름, 이메일, 휴대폰 번화, 가입구분이 일치하는 회원정보를 조회하는 쿼리문 -->
	<select id="selectNaverCheck" resultType="kr.green.usedmarket.vo.MemberVo">
		select * from member where mb_name = #{name} and mb_email = #{email} and mb_phone = #{mobile} and mb_division = #{division}
	</select>
<!-- 네이버로 로그인한 회원정보 등록하는 쿼리문 -->
	<insert id="insertMemberNaver">
		insert into
			member(mb_name, mb_email, mb_phone, mb_gender, mb_division, mb_id, mb_pw)
			values(#{memberNaver.mb_name}, #{memberNaver.mb_email}, #{memberNaver.mb_phone}, #{memberNaver.mb_gender}, #{memberNaver.mb_division},
					#{memberNaver.mb_id}, #{memberNaver.mb_pw})
	</insert>







</mapper>